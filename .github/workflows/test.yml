name: CI
on:
  pull_request:
    branches:
      - dev
    types: [opened, synchronize, reopened]

jobs:
  frontend_lint:
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.ref == 'frontend'
    steps:
    - name: setup node
      uses: actions/setup-node@v4
      with:
        node-version: 'latest'
    - name: checkout
      uses: actions/checkout@v4.2.2
      with:
        ref: frontend
    - name: install dependencies
      working-directory: ./frontend
      run: npm install
    - name: lint
      working-directory: ./frontend
      run: npm run lint
  frontend_test:
    needs: [frontend_lint]
    runs-on: ubuntu-latest
    steps:
    - name: setup node
      uses: actions/setup-node@v4
      with:
        node-version: 'latest'
    - name: checkout
      uses: actions/checkout@v4.2.2
      with:
        ref: frontend
    - name: install dependencies
      working-directory: ./frontend
      run: npm install
    - name: test 
      working-directory: ./frontend
      run: npm run unit-test
  go_test:
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.ref == 'go-backend'
    steps:
      - name: setup go
        uses: actions/setup-go@v5.1.0
        with:
          go-verions: '1.23.1'
      - name: checkout
        uses: actions/checkout@v4.2.2
        with:
          ref: go-backend
      - name: install dependencies
        working-directory: ./auth-service
        run: go mod download
      - name: run test
        working-directory: ./auth-service/tests
        run: go test
  python_test:
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.ref == 'python-backend'
    steps:
      - name: setup python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.11'
      - name: checkout
        uses: actions/checkout@v4.2.2
        with: 
          ref: python-backend
      - name: install dependencies
        working-directory: ./hackathon_backend
        run: pip install --no-cache-dir -r requirements.txt
      - name: run tests
        working-directory: ./hackathon_backend/tests/tests_utils
        run: python -m unittest discover
